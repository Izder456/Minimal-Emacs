<p>I've been keeping myself busy since I posted the &quot;<a rel="noopener" target="_blank" href="https://www.cambus.net/diving-into-toolchains/">Diving into toolchains</a>&quot;
article at the beginning of June, so here is an update detailing what I've
been up to during the past couple of months.</p>
<p>At the end of June, I went through the FSF copyright assignment process for
both <strong>Binutils</strong> and <strong>GDB</strong>, which now allows me to contribute larger
changes to these codebases. I thus updated the <a rel="noopener" target="_blank" href="https://sourceware.org/git/?p=binutils-gdb.git;a=commitdiff;h=77db4723ddda2a5eb20876e8a818f77ffa7dafc8">NetBSD system call table</a>
in GDB, and added support to readelf for <a rel="noopener" target="_blank" href="https://sourceware.org/git/?p=binutils-gdb.git;a=commitdiff;h=98ca73afe51e1e921915c37f242c88d4d445841c">reading OpenBSD ELF core notes</a>.</p>
<p>In Pkgsrc land, I packaged and imported <a rel="noopener" target="_blank" href="https://github.com/rui314/mold">mold</a>, a new linker that is
optimized for modern multi-core machines, and updated our binutils package
to the latest version.</p>
<p>At the end of August, I attended the <strong>OpenBSD k2k21 hackathon</strong>, and one of
the goals I had was to get <a rel="noopener" target="_blank" href="https://clang.llvm.org/docs/SourceBasedCodeCoverage.html">source-based code coverage</a> working in LLVM.
The first part of this was to find how to allow the compiler driver to
link against the <strong>libclang_rt.profile</strong> library when passing the
<strong>-fprofile-instr-generate</strong> and <strong>-fcoverage-mapping</strong> options to Clang.
Once I figured the <a rel="noopener" target="_blank" href="https://www.freshbsd.org/openbsd/src/commit/uWsA4smmd2wX3UBC">magic incantation</a>, I committed my change to src
and <a rel="noopener" target="_blank" href="https://reviews.llvm.org/D109244">sent it upstream</a> where it got committed and backported to the
LLVM 13 branch. With this part sorted, the next step was to build and ship
the library in the base system. I added <a rel="noopener" target="_blank" href="https://www.freshbsd.org/openbsd/src/commit/mQ6P5wL9QLzzIzbt">build infrastructure</a> for the
library in base, and <a rel="noopener" target="_blank" href="https://www.freshbsd.org/openbsd/src/commit/nVaOYoXmnskB2gez">linked it to the build</a>. It is now enabled on
architectures where Clang is built.</p>
<p>To illustrate what we can do with the source-based code coverage, let's
take the following C program:</p>
<pre data-lang="c" style="background-color:#272822;color:#f8f8f2;" class="language-c "><code class="language-c" data-lang="c"><span style="color:#f92672;">#include </span><span style="color:#e6db74;">&lt;stdio.h&gt;
</span><span>
</span><span style="font-style:italic;color:#66d9ef;">int
</span><span style="color:#a6e22e;">main</span><span>()
</span><span>{
</span><span>	</span><span style="color:#66d9ef;">printf</span><span>(</span><span style="color:#e6db74;">&quot; &gt;o_/   &gt;o_/   &gt;o_/ </span><span style="color:#ae81ff;">\n</span><span style="color:#e6db74;">&quot;</span><span>);
</span><span>	</span><span style="color:#f92672;">return </span><span style="color:#ae81ff;">0</span><span>;
</span><span>
</span><span>	</span><span style="color:#66d9ef;">printf</span><span>(</span><span style="color:#e6db74;">&quot;*PAN!* *PAN!* *PAN!*</span><span style="color:#ae81ff;">\n</span><span style="color:#e6db74;">&quot;</span><span>);
</span><span>}
</span></code></pre>
<p>Let's build and instrument it to emit profile data:</p>
<pre style="background-color:#272822;color:#f8f8f2;"><code><span>clang -fprofile-instr-generate -fcoverage-mapping ducks.c -o ducks
</span></code></pre>
<p>And we can now run it to collect and process profile data:</p>
<pre style="background-color:#272822;color:#f8f8f2;"><code><span>LLVM_PROFILE_FILE=&quot;ducks.profraw&quot; ./ducks
</span><span>llvm-profdata merge -sparse ducks.profraw -o ducks.profdata
</span><span>llvm-cov show ./ducks -instr-profile=ducks.profdata
</span></code></pre>
<p>We can see that no ducks were harmed during this experiment:</p>
<p><img src="/content/2021/10/ducks.png" alt="Ducks profile" title="Ducks profiling" /></p>
<p>Coverage reports can also be created by llvm-cov:</p>
<pre style="background-color:#272822;color:#f8f8f2;"><code><span>llvm-cov report ./ducks -instr-profile=ducks.profdata
</span><span>
</span><span>Filename                      Regions    Missed Regions     Cover   Functions  Missed Functions  Executed       Lines      Missed Lines     Cover
</span><span>-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
</span><span>/home/f/ducks/ducks.c               2                 1    50.00%           1                 0   100.00%           6                 1    83.33%
</span><span>-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
</span><span>TOTAL                               2                 1    50.00%           1                 0   100.00%           6                 1    83.33%
</span></code></pre>
<p>Using the <strong>LLVM_PROFILE_FILE</strong> environment variable, it is possible to
do several runs with different options and/or input files and get a new
<strong>.profraw</strong> file each time. All those files can then be merged using
<strong>llvm-profdata</strong>, which is pretty useful for doing coverage reports from
unit tests.</p>
<p>On top of the OpenBSD related changes I've been contributing upstream to
LLVM, I've been continuing my experiments with the build system. I've also
been reading documentation about various parts of the toolchain, sending
diffs when encountering mistakes or things which could be improved.</p>
<p>binutils and GDB commits:</p>
<table><thead><tr><th></th><th></th><th></th></tr></thead><tbody>
<tr><td>2021-09-11</td><td><a rel="noopener" target="_blank" href="https://sourceware.org/git/?p=binutils-gdb.git;a=commitdiff;h=98ca73afe51e1e921915c37f242c88d4d445841c">98ca73a</a></td><td>Add support to readelf for reading OpenBSD ELF core notes</td></tr>
<tr><td>2021-07-14</td><td><a rel="noopener" target="_blank" href="https://sourceware.org/git/?p=binutils-gdb.git;a=commitdiff;h=77db4723ddda2a5eb20876e8a818f77ffa7dafc8">77db472</a></td><td>Update the NetBSD system call table to match NetBSD-current</td></tr>
</tbody></table>
<p>Pkgsrc toolchains related commits:</p>
<table><thead><tr><th></th><th></th><th></th></tr></thead><tbody>
<tr><td>2021-09-27</td><td><a rel="noopener" target="_blank" href="https://github.com/NetBSD/pkgsrc/commit/65675ea811f6d03c306ce7f7c0025b3a54c4d616">65675ea</a></td><td>Update to mold 0.9.6</td></tr>
<tr><td>2021-09-11</td><td><a rel="noopener" target="_blank" href="https://github.com/NetBSD/pkgsrc/commit/871f328dd67d65399dd1c14fb9399facbee7e1ce">871f328</a></td><td>Update to binutils 2.37</td></tr>
<tr><td>2021-09-11</td><td><a rel="noopener" target="_blank" href="https://github.com/NetBSD/pkgsrc/commit/053d0f2eb4be764d374dff859c8fe3f1d0e1b661">53d0f2e</a></td><td>Update to mold 0.9.5</td></tr>
<tr><td>2021-07-29</td><td><a rel="noopener" target="_blank" href="https://github.com/NetBSD/pkgsrc/commit/1b5d5857ac970d79e15d7c766626956da3a65e68">1b5d585</a></td><td>Import mold 0.9.3</td></tr>
</tbody></table>
<p>LLVM commits:</p>
<table><thead><tr><th></th><th></th><th></th></tr></thead><tbody>
<tr><td>2021-09-30</td><td><a rel="noopener" target="_blank" href="https://github.com/llvm/llvm-project/commit/97a0ba475d105838bd9bb7ed8506f599210995c7">97a0ba4</a></td><td>[clang] Update Clang version from 13 to 14 in scan-build.1</td></tr>
<tr><td>2021-09-30</td><td><a rel="noopener" target="_blank" href="https://github.com/llvm/llvm-project/commit/01641f665f5a3f94fc9e2bba598b5a65a6a7bd01">01641f6</a></td><td>[clang] Fix sentence in the usage section of ThinLTO docs</td></tr>
<tr><td>2021-09-29</td><td><a rel="noopener" target="_blank" href="https://github.com/llvm/llvm-project/commit/7a7caf97012f53172743d650fd3c97bce99f86ef">7a7caf9</a></td><td>[clang] Fix library name (libsupc++) in the admonition note</td></tr>
<tr><td>2021-09-28</td><td><a rel="noopener" target="_blank" href="https://github.com/llvm/llvm-project/commit/5b125a49ba9f52cb6b24767f3c98ce623a2d5207">5b125a4</a></td><td>[CMake] Add detection for the mold linker in AddLLVM.cmake</td></tr>
<tr><td>2021-09-24</td><td><a rel="noopener" target="_blank" href="https://github.com/llvm/llvm-project/commit/626e2a6c6236d2fd7582928a0363d381c55eb43d">626e2a6</a></td><td>[compiler-rt] Use portable &quot;#!/usr/bin/env bash&quot; shebang for tests</td></tr>
<tr><td>2021-09-24</td><td><a rel="noopener" target="_blank" href="https://github.com/llvm/llvm-project/commit/4ed05312a1557b2f2552298a3aac12c2e224d77e">4ed0531</a></td><td>[docs] Document the --print-passes flag in opt</td></tr>
<tr><td>2021-09-23</td><td><a rel="noopener" target="_blank" href="https://github.com/llvm/llvm-project/commit/7f5ca8cc2158debe66663f09eb19b4613e75e124">7f5ca8c</a></td><td>[clang] Use portable &quot;#!/usr/bin/env bash&quot; shebang for tools and utils</td></tr>
<tr><td>2021-09-17</td><td><a rel="noopener" target="_blank" href="https://github.com/llvm/llvm-project/commit/b588f5d665aa01fe88921fe2ffb7256fdedfbfb0">b588f5d</a></td><td>[clang][scan-build] Use cc/c++ instead of gcc/g++ on OpenBSD</td></tr>
<tr><td>2021-09-07</td><td><a rel="noopener" target="_blank" href="https://github.com/llvm/llvm-project/commit/4787ef3d0f0abfdc041d418aba28a7e6473f0766">4787ef3</a></td><td>[compiler-rt] Document that builtins is known to work on OpenBSD</td></tr>
<tr><td>2021-09-03</td><td><a rel="noopener" target="_blank" href="https://github.com/llvm/llvm-project/commit/466451c6616272d8c779618b92b0ae80f394a795">466451c</a></td><td>[clang] Allow the OpenBSD driver to link the libclang_rt.profile library</td></tr>
<tr><td>2021-07-27</td><td><a rel="noopener" target="_blank" href="https://github.com/llvm/llvm-project/commit/1862ffe25a2e927ecae012f5f0c4cdf7c3fc1b67">1862ffe</a></td><td>[clang] Fix a typo in the manual page: s/contraint/constraint</td></tr>
<tr><td>2021-07-23</td><td><a rel="noopener" target="_blank" href="https://github.com/llvm/llvm-project/commit/bc96aa9f2c9b25ae65a7e05dbbff8c28079db9c9">bc96aa9</a></td><td>[clang] Fix typos in Options.td and regen ClangCommandLineReference.rst</td></tr>
</tbody></table>
