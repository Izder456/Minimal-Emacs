<p>In my &quot;<a rel="noopener" target="_blank" href="https://www.cambus.net/capturing-text-screens-on-modern-operating-systems/">Capturing text screens on modern operating systems</a>&quot; article
published back in 2013, I mentioned finding a very promising program called
<a rel="noopener" target="_blank" href="https://qodem.sourceforge.net">Qodem</a>. It has since reached maturity and version 1.0 was released in
2017. I have been enjoying it on a regular basis to reminisce about the
glorious days of using <a rel="noopener" target="_blank" href="https://en.wikipedia.org/wiki/Terminate_(software)">Terminate</a> and <a rel="noopener" target="_blank" href="https://en.wikipedia.org/wiki/Minicom">Minicom</a> in the nineties,
and even packaged it in both <strong>OpenBSD</strong> and <strong>NetBSD</strong>.</p>
<p>Qodem has built in support for SSH, and also lets you spawn a local shell
and SSH from there, which allows authentication using SSH keys.</p>
<p>For the purpose of this article, I used two Fedora machines and installed
the <em>ckermit</em> and <em>lrzsz</em> packages to handle the <strong>Kermit</strong> and <strong>ZMODEM</strong>
protocols respectively. There is a <em>qodem</em> package as well, but it only
bundles the X11 binary. I prefer to use the curses version, so I built it
from source.</p>
<p>And from there, let the fun begin:</p>
<pre style="background-color:#272822;color:#f8f8f2;"><code><span>C-Kermit 9.0.302 OPEN SOURCE:, 20 Aug 2011, for Linux (64-bit)
</span><span> Copyright (C) 1985, 2011,
</span><span>  Trustees of Columbia University in the City of New York.
</span><span>Type ? or HELP for help.
</span><span>(/home/fcambus/) C-Kermit&gt;send NetBSD-9.3-amd64.iso
</span><span>Return to your local Kermit and give a RECEIVE command.
</span><span>
</span><span>KERMIT READY TO SEND...
</span><span>9 S~/ @- SENT: [/home/fcambus/NetBSD-9.3-amd64.iso] To: [netbsd-9_3-amd64.iso] (OK)
</span><span>(/home/fcambus/) C-Kermit&gt;
</span></code></pre>
<p>Here is our Kermit transfer in action:</p>
<p><img src="/content/2023/04/qodem-ssh-kermit.gif" alt="Qodem - File transfer using Kermit" title="Qodem - File transfer using Kermit" /></p>
<p>For transferring files using ZMODEM, we use <strong>sz</strong> from the <em>lrzsz</em> package:</p>
<pre style="background-color:#272822;color:#f8f8f2;"><code><span>sz NetBSD-9.3-amd64.iso
</span></code></pre>
<p>And here is our ZMODEM transfer in action:</p>
<p><img src="/content/2023/04/qodem-ssh-zmodem.gif" alt="Qodem - File transfer using ZMODEM" title="Qodem - File transfer using ZMODEM" /></p>
<p>There is something quite special about seeing ZMODEM transfers reach speeds
close to 600 MBit/s. It's hard to explain.</p>
<p>For the record, I used the following script to take screenshots in burst mode
and then create an animated GIF:</p>
<pre data-lang="sh" style="background-color:#272822;color:#f8f8f2;" class="language-sh "><code class="language-sh" data-lang="sh"><span style="color:#f92672;">while </span><span>true</span><span style="color:#f92672;">; do
</span><span>	gnome-screenshot</span><span style="font-style:italic;color:#fd971f;"> -w</span><span style="color:#f92672;">;
</span><span style="color:#f92672;">done
</span></code></pre>
<p>Lastly, if you enjoy watching those glorious progress bars, you might
also enjoy my &quot;<a rel="noopener" target="_blank" href="https://www.cambus.net/file-transfers-via-the-parallel-port-on-dos-using-laplink/">File transfers via the parallel port on DOS using LapLink</a>&quot;
post from last year, which served as the inspiration for this one.</p>
